        ch={'XX','A2','A3','A4','B1','B2','B3','B4','C1','C2','C3','C4','D1','D2','D3','D4'; ...
            'XX','A6','A7','XX','B5','B6','B7','B8','C5','C6','C7','C8','D5','D6','D7','D8'; ...
            'XX','A2','A3','A4','B1','B2','B3','B4','C1','C2','C3','C4','D1','D2','D3','D4'; ...
            'XX','A6','A7','XX','B5','B6','B7','B8','C5','C6','C7','C8','D5','D6','D7','D8'; ...
            'E1','E2','E3','E4','F1','F2','F3','F4','G1','G2','G3','G4','XX','H2','H3','H4'; ...
            'E5','E6','E7','E8','F5','F6','F7','F8','G5','G6','G7','G8','H5','H6','H7','XX'; ...
            'E1','E2','E3','E4','F1','F2','F3','F4','G1','G2','G3','G4','XX','H2','H3','H4'; ...
            'E5','E6','E7','E8','F5','F6','F7','F8','G5','G6','G7','G8','H5','H6','H7','XX'};
        all=sort(unique(ch(:)));
        all(end)=[];

        links={'A2-B1','A2-B2','A2-B3','A2-B7','A2-C3','A2-C4','A2-D2','A2-E7','A2-F1','A2-F4','A2-F5','A2-G7','A2-H4','A3-A4','A3-A6','A3-B2', ...
            'A3-B6','A3-C8','A3-D2','A3-D6','A3-E2','A3-E3','A3-E6','A3-E7','A3-F1','A3-F4','A3-F5','A3-G2','A3-G7','A3-G8','A3-H4','A3-H6', ...
            'A4-A2','A4-A6','A4-B1','A4-B3','A4-B6','A4-B7','A4-B8','A4-C4','A4-C5','A4-C7','A4-C8','A4-E1','A4-E6','A4-F1','A4-F3','A4-F4', ...
            'A4-F5','A4-G3','A4-G7','A4-G8','A4-H2','A6-B1','A6-B6','A6-B7','A6-C4','A6-C7','A6-E2','A6-E5','A6-F3','A6-F5','A6-G7','A6-H2', ...
            'A6-H4','A6-H6','A7-A3','A7-A4','A7-A6','A7-B2','A7-B3','A7-B7','A7-C4','A7-C5','A7-D2','A7-E7','A7-F1','A7-F3','A7-F4','A7-G7', ...
            'A7-H4','A7-H6','B1-A3','B1-A7','B1-B6','B1-C4','B1-D7','B1-E5','B1-F1','B1-F4','B1-G2','B1-H2','B1-H4','B2-A4','B2-A6','B2-B1', ...
            'B2-B6','B2-B7','B2-C3','B2-C5','B2-C8','B2-D6','B2-E1','B2-E3','B2-E5','B2-E7','B2-F3','B2-G3','B2-G7','B2-H2','B2-H4','B3-A3', ...
            'B3-A6','B3-B1','B3-B2','B3-B6','B3-B7','B3-B8','B3-C3','B3-C4','B3-C5','B3-C7','B3-D2','B3-D7','B3-E1','B3-E3','B3-E6','B3-E7', ...
            'B3-F1','B3-F3','B3-F4','B3-G2','B3-G3','B3-G7','B3-H2','B3-H4','B4-B3','B4-C3','B4-D2','B4-F4','B4-G8','B4-H4','B4-H6','B5-B7', ...
            'B5-C3','B5-D2','B5-F4','B6-C3','B6-E7','B6-F1','B6-F4','B6-G8','B6-H4','B7-A3','B7-B1','B7-B4','B7-B6','B7-B8','B7-C4','B7-C5', ...
            'B7-C8','B7-D2','B7-D5','B7-D8','B7-E2','B7-E3','B7-E4','B7-E6','B7-F1','B7-F2','B7-F4','B7-F6','B7-G1','B7-G2','B7-G7','B7-H3', ...
            'B7-H6','B7-H7','B8-A3','B8-A6','B8-B1','B8-B2','B8-C3','B8-C4','B8-C7','B8-D2','B8-D7','B8-E1','B8-E7','B8-F1','B8-F5','B8-G7', ...
            'B8-H4','C3-A3','C3-A4','C3-A6','C3-A7','C3-B1','C3-B7','C3-C4','C3-C7','C3-D7','C3-E3','C3-E4','C3-E6','C3-E7','C3-F1','C3-F3', ...
            'C3-F8','C3-G1','C3-G6','C3-G8','C3-H3','C4-A3','C4-B2','C4-B4','C4-B5','C4-B6','C4-D2','C4-D5','C4-D6','C4-D7','C4-D8','C4-E1', ...
            'C4-E2','C4-E3','C4-E4','C4-E6','C4-E7','C4-E8','C4-F2','C4-G1','C4-G3','C4-G7','C4-G8','C4-H3','C4-H6','C5-A3','C5-A6','C5-B1', ...
            'C5-C3','C5-C4','C5-D6','C5-D7','C5-E6','C5-E7','C5-F1','C5-F4','C5-F5','C5-G8','C5-H2','C5-H4','C7-A3','C7-A7','C7-B1','C7-B2', ...
            'C7-B6','C7-B7','C7-C4','C7-C5','C7-C8','C7-D2','C7-E2','C7-F3','C7-F4','C7-H2','C7-H4','C7-H6','C8-A6','C8-B1','C8-B3','C8-C3', ...
            'C8-C4','C8-D2','C8-E1','C8-E3','C8-E7','C8-F1','C8-F5','C8-G7','C8-H2','C8-H6','D2-A4','D2-A6','D2-B1','D2-B2','D2-B6','D2-C3', ...
            'D2-C5','D2-D5','D2-D6','D2-E3','D2-E4','D2-E5','D2-E6','D2-F1','D2-F3','D2-F8','D2-G3','D2-G6','D2-G7','D2-G8','D2-H4','D2-H6', ...
            'D2-H7','D5-C3','D5-F4','D6-A4','D6-A6','D6-A7','D6-B1','D6-B3','D6-B6','D6-B7','D6-B8','D6-C3','D6-C7','D6-D7','D6-E1','D6-E3', ...
            'D6-E6','D6-E7','D6-F1','D6-F4','D6-F5','D6-G3','D6-G8','D6-H2','D6-H4','D7-A2','D7-A3','D7-A4','D7-A6','D7-A7','D7-B2','D7-B6', ...
            'D7-B7','D7-C7','D7-C8','D7-D2','D7-E2','D7-E7','D7-F4','D7-F5','D7-F8','D7-G2','D7-G7','D7-G8','D7-H6','D8-D2','E1-A3','E1-A6', ...
            'E1-A7','E1-B1','E1-B6','E1-B7','E1-C3','E1-C5','E1-C7','E1-D2','E1-D7','E1-E3','E1-E5','E1-E7','E1-F1','E1-F4','E1-G2','E1-G8', ...
            'E1-H2','E1-H4','E2-A4','E2-A7','E2-B1','E2-B2','E2-B3','E2-B6','E2-C3','E2-C5','E2-C8','E2-D2','E2-D6','E2-E1','E2-E3','E2-E7', ...
            'E2-F1','E2-F3','E2-F4','E2-G2','E2-G7','E2-H4','E3-A4','E3-A6','E3-A7','E3-B1','E3-B6','E3-B8','E3-C5','E3-C7','E3-D7','E3-E7', ...
            'E3-F1','E3-F3','E3-F4','E3-G2','E3-G7','E3-G8','E3-H2','E3-H4','E4-F4','E5-A3','E5-A4','E5-B7','E5-C3','E5-C4','E5-C7','E5-F1', ...
            'E5-F4','E5-G7','E5-G8','E5-H4','E5-H6','E6-A6','E6-B1','E6-B2','E6-C7','E6-D7','E6-E1','E6-E3','E6-E7','E6-F1','E6-G7','E6-G8', ...
            'E6-H2','E6-H6','E7-A4','E7-A6','E7-B1','E7-B7','E7-C7','E7-D2','E7-F3','E7-F8','E7-G7','E7-H6','E8-B7','E8-D2','F1-A6','F1-B2', ...
            'F1-B4','F1-C4','F1-C7','F1-D7','F1-E7','F1-F2','F1-F3','F1-F5','F1-G1','F1-G8','F1-H2','F2-A3','F2-A4','F2-A6','F2-B1','F2-B2', ...
            'F2-C3','F2-D2','F2-E1','F2-F4','F2-F5','F3-A3','F3-B1','F3-B7','F3-B8','F3-C4','F3-D6','F3-D7','F3-E1','F3-E6','F3-F4','F3-F5', ...
            'F3-G8','F3-H2','F3-H4','F3-H6','F4-A6','F4-B2','F4-B8','F4-C3','F4-C4','F4-C8','F4-D2','F4-E6','F4-E7','F4-F1','F4-F5','F4-F8', ...
            'F4-G5','F4-H3','F4-H4','F5-A7','F5-B1','F5-B2','F5-B3','F5-B6','F5-B7','F5-C3','F5-C4','F5-C7','F5-D2','F5-E1','F5-E2','F5-E3', ...
            'F5-E5','F5-E6','F5-E7','F5-G1','F5-G3','F5-H2','F6-D2','F8-B3','F8-B7','F8-C4','F8-F1','F8-F5','F8-G7','F8-H4','F8-H6','G1-D2', ...
            'G1-F4','G1-G8','G1-H4','G1-H6','G2-A4','G2-A6','G2-B2','G2-C3','G2-C4','G2-C7','G2-D2','G2-E7','G2-F1','G2-F4','G2-F5','G2-H4', ...
            'G2-H6','G3-A3','G3-A6','G3-B1','G3-B7','G3-C3','G3-C5','G3-C7','G3-D7','G3-E1','G3-E2','G3-E3','G3-E7','G3-F1','G3-F3','G3-F4', ...
            'G3-G8','G3-H2','G3-H6','G5-B7','G5-C3','G5-C4','G5-D2','G6-B7','G6-C4','G6-F4','G7-B1','G7-B4','G7-B6','G7-C3','G7-C5','G7-C7', ...
            'G7-D6','G7-E1','G7-F1','G7-F2','G7-F3','G7-F4','G7-F5','G7-G1','G7-G2','G7-G3','G7-G8','G8-A2','G8-A6','G8-A7','G8-B1','G8-B2', ...
            'G8-B3','G8-B5','G8-B7','G8-B8','G8-C7','G8-C8','G8-E2','G8-E7','G8-F2','G8-F4','G8-F5','G8-F8','G8-G2','G8-G6','G8-H4','G8-H6', ...
            'H2-A3','H2-A7','H2-B6','H2-B7','H2-B8','H2-C3','H2-C4','H2-D2','H2-D7','H2-E2','H2-E7','H2-F2','H2-F4','H2-G2','H2-G7','H2-G8', ...
            'H2-H6','H3-D2','H3-F1','H3-G7','H3-G8','H3-H4','H3-H6','H4-A4','H4-B7','H4-C3','H4-C4','H4-C8','H4-D7','H4-E6','H4-E7','H4-F1', ...
            'H4-F2','H4-F5','H4-G3','H4-G7','H4-H2','H4-H6','H6-A2','H6-A4','H6-B1','H6-B2','H6-B3','H6-B5','H6-B6','H6-B8','H6-C3','H6-C5', ...
            'H6-D6','H6-E1','H6-E2','H6-E3','H6-F1','H6-F2','H6-F4','H6-F5','H6-G6','H6-G7','H7-C4','C1-B1','C2-D2','C6-C5','D1-E1','D3-D2', ...
            'D4-E4','F7-F6','G4-G5','H5-H6'};

        G=zeros(length(all));
        for i=1:length(links)
            ii=find(strcmp(links{i}(1:2),all));
            jj=find(strcmp(links{i}(4:5),all));
            G(ii,jj)=1;
            G(jj,ii)=1;
        end
        k=sum(G)';


% Define the directory path where you want to save the CSV
outputDir = './data/';  % Replace with your desired path

% Check if the directory exists, if not, create it
if ~isfolder(outputDir)
    mkdir(outputDir);
    disp(['Directory created: ', outputDir]);
end

% Assuming 'links' is your cell array of link pairs
% Example format: links = {'A2-B1', 'A2-B2', ..., 'H5-H6'};

% Convert the links to an edge list (source, target)
edges = cell(length(links), 2);
for i = 1:length(links)
    % Split each link into source and target nodes
    nodes = strsplit(links{i}, '-');
    edges{i, 1} = nodes{1};  % Source node
    edges{i, 2} = nodes{2};  % Target node
end

% Write the edge list to a CSV file
csv_filename = fullfile(outputDir, 'edgelist.csv');
fid = fopen(csv_filename, 'w');
fprintf(fid, 'source,target\n');  % Write header
for i = 1:size(edges, 1)
    fprintf(fid, '%s,%s\n', edges{i, 1}, edges{i, 2});
end
fclose(fid);

disp(['Edge list saved to ' csv_filename]);


% Assuming 'all' is a cell array of node names (e.g., {'A2', 'B1', 'B2', ...})
% Example: all = {'A2', 'B1', 'B2', ..., 'H6'};

% Create a numbered mapping (1, 2, 3, ...)
node_ids = (1:length(all))';  % Column vector of IDs
nodelist = [num2cell(node_ids), all(:)];  % Combine into a cell array

% Save as a CSV file
csv_filename = fullfile(outputDir, 'nodelist.csv');
fid = fopen(csv_filename, 'w');
fprintf(fid, 'id,node\n');  % Write header
for i = 1:size(nodelist, 1)
    fprintf(fid, '%d,%s\n', nodelist{i, 1}, nodelist{i, 2});
end
fclose(fid);

disp(['Node list saved to ' csv_filename]);

% save adjacency matrix
csv_filename = fullfile(outputDir, 'G.csv');

writematrix(G, csv_filename);